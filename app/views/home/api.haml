- content_for :head do
  = set_meta_tags :title => 'API Documentation'
  
#intro_blurb
  .inner
    #intro_blurb_title
      %span API Documentation
    #blurb
      Get Started with the Oil Reporter API
/ end intro

.clearboth

#breadcrumbs
  .inner
    %p.breadcrumb
      = render_crumbs :seperator => '<span class="breadarrow">/</span>'

#has_sidebar
  #body_block
    .inner
      #primary
        .content
          %h1
            What is the Oil Reporter API?
          %p
            The Oil Reporter API contains a series of methods for obtaining data through standard HTTP requests. This allows Oil Reporter to be integrated with just about any application that can connect to the web.
          
          .divider.top
          
          %h2 Sign Up
          %p
            You can get an API key by signing up for one 
            %a{ :href => "/signup" }
              here.
          
          .divider.top
            %a{ :href => "#" }
              Top
              
          %h5 Table of Contents
          %ul
            %li
              %a{ :href => "#data" }
                Data Structure
            %li
              %a{ :href => "#create" }
                Create a New Report
            %li
              %a{ :href => "#media" }
                Add Media to Report
            %li
              %a{ :href => "#list" }
                Retrieve a List of Reports
            %li
              %a{ :href => "#organization" }
                Retrieve a List of Reports by Organization


          .divider.top
            %a{ :href => "#" }
              Top
          
          %a{ :name => "data" }
          %h2 Data Structure
          %p
            The structure of a report is below.
          %p
            :coderay
              #!plaintext
              - id (integer, read-only)
              - organization_pin (integer, optional)
              - oil (integer, 0-10)
              - wetlands (integer, 0-10)
              - description (text)
              - wildlife (text)
              - latitude (float)
              - longitude (float)
              - created_at (datetime)
              - media (hash/binary) 
                  When parsing the results of a call to list, the media property 
                  is a hash with the fields tiny, thumb and medium each of which 
                  is a string corresponding to the URL where the image is located.

                  If media has not been set then the value is null.

                  On a call to update to upload a photo, then media accepts a binary stream.
          
          .divider.top
            %a{ :href => "#" }
              Top

          %a{ :name => "create" }
          %h2 Create a New Report
          %p
            Allows you to create a new report.  This request needs a unique device identifier (device_id).
            %li 
              Method: POST
            %li 
              URL: /reports
            %li 
              Required: oil, wetlands, device_id, api_key
            %li
              Success: id returned and HTTP status code 200
            %li
              Failure: array of errors and HTTP status code 422 
          %p
            :coderay
              #!plaintext
              curl -d "api_key=YOUR_API_KEY&latitude=29.964639&longitude=-90.067763&oil=5&wetlands=7&description=Distressed%20Wildlife&device_id=UNIQUE_DEVICE_ID" http://oilreporter.org/reports
              Returns {"id":8}
          
          .divider.top
            %a{ :href => "#" }
              Top
          
          %a{ :name => "media" }
          %h2 Add Media to Report
          %p
            Allows you to add media to an existing report.  You need the ID of the report you created to be able to call this url. 
            %li 
              Method: PUT
            %li 
              URL: /reports/*ID*
            %li 
              Required: id, api_key
            %li
              Success: empty text and HTTP status code 200
            %li
              Failure: empty text and HTTP status code 422
          %p
            :coderay
              #!plaintext
              curl -X PUT -F "media=@seagull.jpg" http://oilreporter.org/reports/8?api_key=YOUR_API_KEY
              Returns empty text and an HTTP status code of 200
          
          .divider.top
            %a{ :href => "#" }
              Top
          
          %a{ :name => "list" }
          %h2 Retrieve a List of Reports
          %p
            Allows you to retrieve a list of reports.
            %li 
              Method: GET
            %li 
              URL: /reports.format (format: json, xml)
            %li 
              Required: api_key
            %li 
              Optional: page (default: 1)
            %li
              Success: array of paginated results status code 200
          %p
            :coderay
              #!plaintext
              curl http://oilreporter.org/reports.json?api_key=YOUR_API_KEY
              Returns
              [
                { "id": 8,
                  "oil": 5,
                  "wetlands": 7,
                  "description": "Distressed Wildlife",
                  "wildlife": "Dead",
                  "latitude":"29.9646",
                  "longitude": "-90.0678",
                  "created_at": "2010-05-13T19:29:54Z",
                  "media": { "tiny":"http://s3.amazonaws.com/oilreporter_production/medias/7/tiny.jpg?1273722135",
                             "thumb":"http://s3.amazonaws.com/oilreporter_production/medias/7/thumb.jpg?1273722135",
                             "medium":"http://s3.amazonaws.com/oilreporter_production/medias/7/medium.jpg?1273722135" }
                }
              ]
              
          .divider.top
            %a{ :href => "#" }
              Top

          %a{ :name => "organization" }
          %h2 List reports by organization
          %p
            Allows you to retrieve a list of an organization's reports
            %li
              Method: GET
            %li
              URL: /organizations/*PIN*
            %li
              Required: pin (#{link_to('Sign up', new_organization_path)}), api_key
            %li
              Optional: page (default: 1)
            %li
              Success: List of reports and HTTP status code 200
            %li
              Failure: Error message and HTTP status code 404
          %p
            :coderay
              #!plaintext
              curl -d "api_key=YOUR_API_KEY" http://oilreporter.org/organizations/1001
              [
                { "id": 8,
                  "oil": 5,
                  "wetlands": 7,
                  "description": "Distressed Wildlife",
                  "wildlife": "Dead",
                  "latitude":"29.9646",
                  "longitude": "-90.0678",
                  "created_at": "2010-05-13T19:29:54Z",
                  "media": { "tiny":"http://s3.amazonaws.com/oilreporter_production/medias/7/tiny.jpg?1273722135",
                             "thumb":"http://s3.amazonaws.com/oilreporter_production/medias/7/thumb.jpg?1273722135",
                             "medium":"http://s3.amazonaws.com/oilreporter_production/medias/7/medium.jpg?1273722135" }
                }
              ]

          .divider.top
            %a{ :href => "#" }
              Top
        / end content
      / end primary
      
      #secondary
        .content
          / = search # disabled for now

          .widget.link_list
            %h3.widgettitle Navigation
            %ul
              %li
                %a{ :href => "#data" }
                  Data Structure
              %li
                %a{ :href => "#create" }
                  Create a New Report
              %li
                %a{ :href => "#media" }
                  Add Media to Report
              %li
                %a{ :href => "#list" }
                  Retrieve a List of Reports
              %li
                %a{ :href => "#organization" }
                  Retrieve a List of Reports by Organization
