#intro_blurb
  .inner
    #intro_blurb_title
      %span Setup
    #blurb
      Getting Your Development Environment Setup
/ end intro

.clearboth

#breadcrumbs
  .inner
    %p.breadcrumb
      = render_crumbs :seperator => '<span class="breadarrow">/</span>'

#has_sidebar
  #body_block
    .inner
      - if flash.any?
        - flash.each do |key, value|
          %div{ :class => "#{key}_box", :style => "max-width:500px;margin-bottom:20px;" }
            = value
      #primary
        .content
          %h1 Helping Clean Up 
          %p
            With Titanium Appcelerator and your JavaScript skills, you can build an app in a matter of hours to mash up images, video, and data from the Oil Reporter web service.
          %p
            %span.frame.alignleft
              %img{ :src => "/images/appcelerator.png"}

          .divider.top
            %a{ :href => "#" }
              Top

          %h2 What you'll need
          %p
            %ul
              %li
                %a{ :href => "http://www.appcelerator.com/download" }
                  Titanium Mobile SDK
              %li
                %a{ :href => "/signup" }
                  API Key
              %li
                %a{ :href => "http://github.com" }
                  Github 
                (recommended)
              %li
                %a{ :href => "http://twitter.com/oilreporter" }
                  Follow Us on Twitter 
                (stay updated)
              %li
                A Great Idea
          
          .divider.top
            %a{ :href => "#" }
              Top
          
          %p
            %span.dropcap2
              1
            Obtain an API key which will allow you to consume Oil Reporter web services. 
            You can get an API key by signing up for one 
            %a{ :href => "/signup" }
              here.
          
          .divider.top
            %a{ :href => "#" }
              Top

          %p
            %span.dropcap2
              2
            Download and install the
            %a{ :href => "http://developer.apple.com/iphone" }
              iPhone 
            and/or
            %a{ :href => "http://developer.android.com" }
              Android 
            SDKs for native mobile development.
            %a{ :href => "http://vimeo.com/10038503" }
              This screen-cast
            shows you how to get set up.
          
          .divider.top
            %a{ :href => "#" }
              Top
          
          %p
            %span.dropcap2
              3
            %a{ :href => "http://www.appcelerator.com/download" }
              Download and install 
            the Titanium Developer tool,
            to create and manage your mobile projects.
          
          .divider.top
            %a{ :href => "#" }
              Top

          %p
            %span.dropcap2
              4
            Create a great mobile application, and lend a hand!
          
          .divider.top
            %a{ :href => "#" }
              Top
        / end content
      /end primary
            
      %h2 Request Help

      %p
        = error_messages_for :developer
        Use this form below to request assistance.
        - form_for(:organization, :url => "organizations", :html => { :id => 'contact_form' }) do |f|
          %fieldset
            %p
              = f.text_field :name, :class => "requiredFieldContact textfield", :id => "field"
              = f.label :name, "Organization Name"
            %p
              = f.text_field :contact_person, :class => "requiredFieldContact textfield", :id => "field"
              = f.label :contact_person, "Contact Person"
            %p
              = f.text_field :email, :class => "requiredFieldContact textfield", :id => "email"
              = f.label :email, "&nbsp;E-mail Address"
            %p
              = f.text_field :website, :class => "requiredFieldContact textfield", :id => "url"
              = f.label :website
            %p
              = f.text_area :purpose, :class => "requiredFieldContact textarea", :id => "field"
            %p.loadingImgWidgetFt
            %p
              = submit_tag('Submit', :class => "round s button")
    .clearboth